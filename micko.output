Terminals unused in grammar

    _POINTER


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON
   13         | _TYPE _ID size _SEMICOLON
   14         | _TYPE _ID _ASSIGN _LBRACKET literal_list _RBRACKET _SEMICOLON
   15         | _STACK _DOUBLE_COLON _TYPE _ID size _SEMICOLON

   16 literal_list: literal
   17             | literal_list _COMMA literal

   18 size: _LSQBRACKET _INT_NUMBER _RSQBRACKET
   19     | _LSQBRACKET _UINT_NUMBER _RSQBRACKET

   20 statement_list: %empty
   21               | statement_list statement

   22 statement: compound_statement
   23          | assignment_statement
   24          | if_statement
   25          | return_statement

   26 compound_statement: _LBRACKET statement_list _RBRACKET

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   28                     | _ID size _ASSIGN num_exp _SEMICOLON
   29                     | _ID _DOT _PUSH _LPAREN num_exp _RPAREN _SEMICOLON

   30 num_exp: exp
   31        | num_exp _AROP exp

   32 exp: literal
   33    | _ID size
   34    | _ID
   35    | _ID _DOT _POP _LPAREN _RPAREN
   36    | _ID _DOT _TOP _LPAREN _RPAREN
   37    | function_call
   38    | _LPAREN num_exp _RPAREN

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 $@3: %empty

   42 function_call: _ID $@3 _LPAREN argument _RPAREN

   43 argument: %empty
   44         | num_exp

   45 if_statement: if_part
   46             | if_part _ELSE statement

   47 @4: %empty

   48 $@5: %empty

   49 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   50 rel_exp: num_exp _RELOP num_exp

   51 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12 13 14 15
    _IF (259) 49
    _ELSE (260) 46
    _RETURN (261) 51
    _ID <s> (262) 5 7 12 13 14 15 27 28 29 33 34 35 36 42
    _INT_NUMBER <s> (263) 18 39
    _UINT_NUMBER <s> (264) 19 40
    _LPAREN (265) 5 29 35 36 38 42 49
    _RPAREN (266) 5 29 35 36 38 42 49
    _LBRACKET (267) 9 14 26
    _RBRACKET (268) 9 14 26
    _LSQBRACKET (269) 18 19
    _RSQBRACKET (270) 18 19
    _COMMA (271) 17
    _ASSIGN (272) 14 27 28
    _SEMICOLON (273) 12 13 14 15 27 28 29 51
    _DOT (274) 29 35 36
    _DOUBLE_COLON (275) 15
    _STACK (276) 15
    _POP (277) 35
    _TOP (278) 36
    _PUSH (279) 29
    _AROP <i> (280) 31
    _POINTER (281)
    _RELOP <i> (282) 50
    ONLY_IF (283)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    program (30)
        on left: 1
        on right: 0
    function_list (31)
        on left: 2 3
        on right: 1 3
    function (32)
        on left: 5
        on right: 2 3
    $@1 (33)
        on left: 4
        on right: 5
    parameter (34)
        on left: 6 7
        on right: 5
    body (35)
        on left: 9
        on right: 5
    $@2 (36)
        on left: 8
        on right: 9
    variable_list (37)
        on left: 10 11
        on right: 9 11
    variable (38)
        on left: 12 13 14 15
        on right: 11
    literal_list (39)
        on left: 16 17
        on right: 14 17
    size <i> (40)
        on left: 18 19
        on right: 13 15 28 33
    statement_list (41)
        on left: 20 21
        on right: 9 21 26
    statement (42)
        on left: 22 23 24 25
        on right: 21 46 49
    compound_statement (43)
        on left: 26
        on right: 22
    assignment_statement (44)
        on left: 27 28 29
        on right: 23
    num_exp <vals> (45)
        on left: 30 31
        on right: 27 28 29 31 38 44 50 51
    exp <vals> (46)
        on left: 32 33 34 35 36 37 38
        on right: 30 31
    literal <i> (47)
        on left: 39 40
        on right: 16 17 32
    function_call <i> (48)
        on left: 42
        on right: 37
    $@3 (49)
        on left: 41
        on right: 42
    argument <i> (50)
        on left: 43 44
        on right: 42
    if_statement (51)
        on left: 45 46
        on right: 24
    if_part <i> (52)
        on left: 49
        on right: 45 46
    @4 (53)
        on left: 47
        on right: 49
    $@5 (54)
        on left: 48
        on right: 49
    rel_exp <i> (55)
        on left: 50
        on right: 49
    return_statement (56)
        on left: 51
        on right: 25


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE   shift, and go to state 17
    _STACK  shift, and go to state 18

    $default  reduce using rule 8 ($@2)

    $@2       go to state 19
    variable  go to state 20


State 17

   12 variable: _TYPE . _ID _SEMICOLON
   13         | _TYPE . _ID size _SEMICOLON
   14         | _TYPE . _ID _ASSIGN _LBRACKET literal_list _RBRACKET _SEMICOLON

    _ID  shift, and go to state 21


State 18

   15 variable: _STACK . _DOUBLE_COLON _TYPE _ID size _SEMICOLON

    _DOUBLE_COLON  shift, and go to state 22


State 19

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 20 (statement_list)

    statement_list  go to state 23


State 20

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 21

   12 variable: _TYPE _ID . _SEMICOLON
   13         | _TYPE _ID . size _SEMICOLON
   14         | _TYPE _ID . _ASSIGN _LBRACKET literal_list _RBRACKET _SEMICOLON

    _LSQBRACKET  shift, and go to state 24
    _ASSIGN      shift, and go to state 25
    _SEMICOLON   shift, and go to state 26

    size  go to state 27


State 22

   15 variable: _STACK _DOUBLE_COLON . _TYPE _ID size _SEMICOLON

    _TYPE  shift, and go to state 28


State 23

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   21 statement_list: statement_list . statement

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32
    _RBRACKET  shift, and go to state 33

    statement             go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 24

   18 size: _LSQBRACKET . _INT_NUMBER _RSQBRACKET
   19     | _LSQBRACKET . _UINT_NUMBER _RSQBRACKET

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41


State 25

   14 variable: _TYPE _ID _ASSIGN . _LBRACKET literal_list _RBRACKET _SEMICOLON

    _LBRACKET  shift, and go to state 42


State 26

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 27

   13 variable: _TYPE _ID size . _SEMICOLON

    _SEMICOLON  shift, and go to state 43


State 28

   15 variable: _STACK _DOUBLE_COLON _TYPE . _ID size _SEMICOLON

    _ID  shift, and go to state 44


State 29

   49 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 45


State 30

   51 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 50
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 31

   27 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   28                     | _ID . size _ASSIGN num_exp _SEMICOLON
   29                     | _ID . _DOT _PUSH _LPAREN num_exp _RPAREN _SEMICOLON

    _LSQBRACKET  shift, and go to state 24
    _ASSIGN      shift, and go to state 54
    _DOT         shift, and go to state 55

    size  go to state 56


State 32

   26 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 20 (statement_list)

    statement_list  go to state 57


State 33

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 34

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 35

   22 statement: compound_statement .

    $default  reduce using rule 22 (statement)


State 36

   23 statement: assignment_statement .

    $default  reduce using rule 23 (statement)


State 37

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 38

   45 if_statement: if_part .
   46             | if_part . _ELSE statement

    _ELSE  shift, and go to state 58

    $default  reduce using rule 45 (if_statement)


State 39

   25 statement: return_statement .

    $default  reduce using rule 25 (statement)


State 40

   18 size: _LSQBRACKET _INT_NUMBER . _RSQBRACKET

    _RSQBRACKET  shift, and go to state 59


State 41

   19 size: _LSQBRACKET _UINT_NUMBER . _RSQBRACKET

    _RSQBRACKET  shift, and go to state 60


State 42

   14 variable: _TYPE _ID _ASSIGN _LBRACKET . literal_list _RBRACKET _SEMICOLON

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal_list  go to state 61
    literal       go to state 62


State 43

   13 variable: _TYPE _ID size _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 44

   15 variable: _STACK _DOUBLE_COLON _TYPE _ID . size _SEMICOLON

    _LSQBRACKET  shift, and go to state 24

    size  go to state 63


State 45

   49 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 47 (@4)

    @4  go to state 64


State 46

   33 exp: _ID . size
   34    | _ID .
   35    | _ID . _DOT _POP _LPAREN _RPAREN
   36    | _ID . _DOT _TOP _LPAREN _RPAREN
   42 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LSQBRACKET  shift, and go to state 24
    _DOT         shift, and go to state 65

    _LPAREN   reduce using rule 41 ($@3)
    $default  reduce using rule 34 (exp)

    size  go to state 66
    $@3   go to state 67


State 47

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 48

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 49

   38 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 68
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 50

   31 num_exp: num_exp . _AROP exp
   51 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 69
    _AROP       shift, and go to state 70


State 51

   30 num_exp: exp .

    $default  reduce using rule 30 (num_exp)


State 52

   32 exp: literal .

    $default  reduce using rule 32 (exp)


State 53

   37 exp: function_call .

    $default  reduce using rule 37 (exp)


State 54

   27 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 71
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 55

   29 assignment_statement: _ID _DOT . _PUSH _LPAREN num_exp _RPAREN _SEMICOLON

    _PUSH  shift, and go to state 72


State 56

   28 assignment_statement: _ID size . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 73


State 57

   21 statement_list: statement_list . statement
   26 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32
    _RBRACKET  shift, and go to state 74

    statement             go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 58

   46 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32

    statement             go to state 75
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 59

   18 size: _LSQBRACKET _INT_NUMBER _RSQBRACKET .

    $default  reduce using rule 18 (size)


State 60

   19 size: _LSQBRACKET _UINT_NUMBER _RSQBRACKET .

    $default  reduce using rule 19 (size)


State 61

   14 variable: _TYPE _ID _ASSIGN _LBRACKET literal_list . _RBRACKET _SEMICOLON
   17 literal_list: literal_list . _COMMA literal

    _RBRACKET  shift, and go to state 76
    _COMMA     shift, and go to state 77


State 62

   16 literal_list: literal .

    $default  reduce using rule 16 (literal_list)


State 63

   15 variable: _STACK _DOUBLE_COLON _TYPE _ID size . _SEMICOLON

    _SEMICOLON  shift, and go to state 78


State 64

   49 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 79
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 80


State 65

   35 exp: _ID _DOT . _POP _LPAREN _RPAREN
   36    | _ID _DOT . _TOP _LPAREN _RPAREN

    _POP  shift, and go to state 81
    _TOP  shift, and go to state 82


State 66

   33 exp: _ID size .

    $default  reduce using rule 33 (exp)


State 67

   42 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 83


State 68

   31 num_exp: num_exp . _AROP exp
   38 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 84
    _AROP    shift, and go to state 70


State 69

   51 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 51 (return_statement)


State 70

   31 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    exp            go to state 85
    literal        go to state 52
    function_call  go to state 53


State 71

   27 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   31 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 86
    _AROP       shift, and go to state 70


State 72

   29 assignment_statement: _ID _DOT _PUSH . _LPAREN num_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 87


State 73

   28 assignment_statement: _ID size _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 88
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 74

   26 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 26 (compound_statement)


State 75

   46 if_statement: if_part _ELSE statement .

    $default  reduce using rule 46 (if_statement)


State 76

   14 variable: _TYPE _ID _ASSIGN _LBRACKET literal_list _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 89


State 77

   17 literal_list: literal_list _COMMA . literal

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 90


State 78

   15 variable: _STACK _DOUBLE_COLON _TYPE _ID size _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 79

   31 num_exp: num_exp . _AROP exp
   50 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 70
    _RELOP  shift, and go to state 91


State 80

   49 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 48 ($@5)

    $@5  go to state 92


State 81

   35 exp: _ID _DOT _POP . _LPAREN _RPAREN

    _LPAREN  shift, and go to state 93


State 82

   36 exp: _ID _DOT _TOP . _LPAREN _RPAREN

    _LPAREN  shift, and go to state 94


State 83

   42 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    $default  reduce using rule 43 (argument)

    num_exp        go to state 95
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    argument       go to state 96


State 84

   38 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 38 (exp)


State 85

   31 num_exp: num_exp _AROP exp .

    $default  reduce using rule 31 (num_exp)


State 86

   27 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 27 (assignment_statement)


State 87

   29 assignment_statement: _ID _DOT _PUSH _LPAREN . num_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 97
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 88

   28 assignment_statement: _ID size _ASSIGN num_exp . _SEMICOLON
   31 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 98
    _AROP       shift, and go to state 70


State 89

   14 variable: _TYPE _ID _ASSIGN _LBRACKET literal_list _RBRACKET _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 90

   17 literal_list: literal_list _COMMA literal .

    $default  reduce using rule 17 (literal_list)


State 91

   50 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49

    num_exp        go to state 99
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 92

   49 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 100


State 93

   35 exp: _ID _DOT _POP _LPAREN . _RPAREN

    _RPAREN  shift, and go to state 101


State 94

   36 exp: _ID _DOT _TOP _LPAREN . _RPAREN

    _RPAREN  shift, and go to state 102


State 95

   31 num_exp: num_exp . _AROP exp
   44 argument: num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 44 (argument)


State 96

   42 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 103


State 97

   29 assignment_statement: _ID _DOT _PUSH _LPAREN num_exp . _RPAREN _SEMICOLON
   31 num_exp: num_exp . _AROP exp

    _RPAREN  shift, and go to state 104
    _AROP    shift, and go to state 70


State 98

   28 assignment_statement: _ID size _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 28 (assignment_statement)


State 99

   31 num_exp: num_exp . _AROP exp
   50 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 50 (rel_exp)


State 100

   49 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 29
    _RETURN    shift, and go to state 30
    _ID        shift, and go to state 31
    _LBRACKET  shift, and go to state 32

    statement             go to state 105
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 101

   35 exp: _ID _DOT _POP _LPAREN _RPAREN .

    $default  reduce using rule 35 (exp)


State 102

   36 exp: _ID _DOT _TOP _LPAREN _RPAREN .

    $default  reduce using rule 36 (exp)


State 103

   42 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 42 (function_call)


State 104

   29 assignment_statement: _ID _DOT _PUSH _LPAREN num_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 106


State 105

   49 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 49 (if_part)


State 106

   29 assignment_statement: _ID _DOT _PUSH _LPAREN num_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 29 (assignment_statement)
